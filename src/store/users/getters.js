export default {
  authToken: state => state.authToken,
  authTokenType: state => state.authTokenType,
  userStatus: state => ({ err: state.userStatusErrors, loading: state.userStatusLoading, res: state.userStatusResult, email: state.userEmail }),
  changePasswordStatus: state => ({ err: state.changePasswordErrors, loading: state.changePasswordLoading }),
  userAuthData: state => ({ err: state.userAuthErrors, loading: state.userAuthLoading, res: state.userAuthData }),
  registrationStatus: state => ({ err: state.registrationErrors, loading: state.registrationLoading }),
  registration2FAStatus: state => ({ err: state.registration2FAErrors, loading: state.registrationLoading, res: state.registration2FAResult }),
  confirmEmailStatus: state => ({ err: state.confirmEmailErrors, loading: state.confirmEmailLoading }),
  confirmMnemonicStatus: state => ({ err: state.confirmMnemonicErrors, loading: state.confirmMnemonicLoading }),
  resendEmailStatus: state => ({ err: state.resendEmailErrors, loading: state.resendEmailLoading }),
  loginStatus: state => ({ err: state.loginErrors, loading: state.loginLoading }),
  lostPasswordStatus: state => ({ err: state.lostPasswordErrors, res: state.lostPasswordResult, loading: state.lostPasswordLoading }),
  lostTfaStatus: state => ({ err: state.lostTfaErrors, loading: state.lostTfaLoading }),
  resetTfaStatus: state => ({ err: state.resetTfaErrors, loading: state.resetTfaLoading }),
  mnemonic: state => state.mnemonic,
  tfaData: state => state.tfaData,
  encryptedServerData: state => state.encryptedServerData,
  registrationComplete: state => state.userStatusResult && state.userStatusResult.mail_confirmed && state.userStatusResult.mnemonic_confirmed && state.userStatusResult.tfa_confirmed,
};
